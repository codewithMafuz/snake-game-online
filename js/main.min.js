const ids=["board","snake-speed","pause","squareSnake"],mp3s=["moveSound","foodSound","gameOverSound"],[board,snakeSpeed,pause,squareSnake]=ids.map(a=>document.getElementById(a)),[moveSound,footSound,gameOverSound]=mp3s.map(b=>new Audio("../audio/"+b+".mp3"));let animationFrameRunning,score=0,highScore=JSON.parse(localStorage.getItem("highScore"));null===highScore&&(highScore=0,localStorage.setItem("highScore",JSON.stringify(highScore)));function rmAllModalIfHave(){Array.from(document.getElementsByClassName("modal")).forEach(a=>{a.remove()})}let lastRunTime=0,fps=5,snakeBodyAllParts=[{x:1,y:1},{x:2,y:1},{x:3,y:1}];const food={x:10,y:10},snakePartClasses=$(".snake-head, .snake-body, .snake-foot");let runningNow=!1,maxX=39,maxY=39;const movedDirection={x:1,y:0};let prevPressedKeyAngelWas="X",isMobileSessionStorage=JSON.parse(sessionStorage.getItem("isMobile"));null===isMobileSessionStorage&&fetch("https://api.bigdatacloud.net/data/client-info").then(a=>a.json()).then(a=>{sessionStorage.setItem("isMobile",JSON.stringify(a.isMobile))}).catch(()=>{window.matchMedia("(max-width:600px)").matches&&(isMobileSessionStorage=!0,sessionStorage.setItem("isMobile",JSON.stringify(!0)))});function animationFrame(a){runningNow=!0,animationFrameRunning=requestAnimationFrame(animationFrame);(a-lastRunTime)/1e3<1/fps||(lastRunTime=a,gameEngine())}const resetBoard=()=>{board.innerHTML="",snakeBodyAllParts=[{x:1,y:1},{x:2,y:1},{x:3,y:1}],movedDirection.x=1,movedDirection.y=0,prevPressedKeyAngelWas="X",setBoxInBoard(1,1,"snake-foot"),setBoxInBoard(2,1,"snake-body"),setBoxInBoard(3,1,"snake-head"),cancelAnimationFrame(animationFrameRunning)},setBoxInBoard=(a=10,b=10,c="snake-food")=>{const d=document.createElement("div");d.style.gridColumnStart=a,d.style.gridRowStart=b,d.className=c,board.appendChild(d)},genarateFood=()=>{food.x=Math.floor(Math.random()*(maxX-1))+1,food.y=Math.floor(Math.random()*(maxY-1))+1},gameOver=(a,b=!1)=>{gameOverSound.play(),score=0,displayScoreBoard(),showAlertBox("Game Over !!!",`You made score : <b>${a}</b><br><b>${b?b:"Crashed On Wall"}</b`,"OK")},isDuplicateAvailabe=a=>{for(let b=0;b<a.length;b++)for(let c=0;c<a.length;c++)if(b!==c&&a[b].x===a[c].x&&a[b].y===a[c].y)return!0;return!1},displayScoreBoard=()=>{highScore=JSON.parse(localStorage.getItem("highScore")),score>highScore&&(highScore=score,localStorage.setItem("highScore",JSON.stringify(highScore))),$(".scoreElm").text(score),$(".highScoreElm").text(highScore)},showAlertBox=(a="Game Over !!!",b="",c="Close")=>{rmAllModalIfHave();const d=document.createElement("div");d.className="modal",d.tabIndex="-1",d.innerHTML=`<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h5 class="modal-title">${a}</h5><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button></div><div class="modal-body">${b}</div><div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">${c}</button></div></div></div   `,document.body.appendChild(d),$(".modal").modal("show")};function gameEngine(){snakePartClasses.css({"border-radius":squareSnake?"2px":"50px"}),alreadyShown=!1;const a=snakeBodyAllParts.length;board.innerHTML="";const b=[];setBoxInBoard(food.x,food.y,"snake-food");for(let c=0;c<a;c++){const d=snakeBodyAllParts[c],e=c==a-1?{x:d.x+movedDirection.x,y:d.y+movedDirection.y}:snakeBodyAllParts[c+1];setBoxInBoard(d.x,d.y,0==c?"snake-foot":c===a-1?"snake-head":"snake-body"),b.push(e)}if(snakeBodyAllParts[snakeBodyAllParts.length-1].x===food.x&&snakeBodyAllParts[snakeBodyAllParts.length-1].y===food.y){score++,footSound.play(),genarateFood();const a={x:snakeBodyAllParts[0].x-1,y:snakeBodyAllParts[0].y-1};b.unshift(a)}const c=snakeBodyAllParts[a-1];return 0!==c.x&&0!==c.y&&c.x!==maxX+2&&c.y!==maxY+2||alreadyShown?isDuplicateAvailabe(snakeBodyAllParts)&&!alreadyShown?(alreadyShown=!0,gameOver(score,"Snake Cut It's Foot"),void resetBoard()):void(displayScoreBoard(),snakeBodyAllParts=b):(alreadyShown=!0,gameOver(score),void resetBoard())}snakeSpeed.addEventListener("input",function(){const a=parseInt(parseInt(this.value)/10);3>a?this.value=30:fps=a,$("#snake-speed").blur()}),pause.addEventListener("click",function(){pauseOrContinueGame(),pause.innerHTML=runningNow?"Paused":"Continue"});const goUp=()=>{runningNow&&"Y"!==prevPressedKeyAngelWas&&(moveSound.play(),movedDirection.x=0,movedDirection.y=-1,prevPressedKeyAngelWas="Y")},goDown=()=>{runningNow&&"Y"!==prevPressedKeyAngelWas&&(moveSound.play(),movedDirection.x=0,movedDirection.y=1,prevPressedKeyAngelWas="Y")},goLeft=()=>{runningNow&&"X"!==prevPressedKeyAngelWas&&(moveSound.play(),movedDirection.x=-1,movedDirection.y=0,prevPressedKeyAngelWas="X")},goRight=()=>{runningNow&&"X"!==prevPressedKeyAngelWas&&(moveSound.play(),movedDirection.x=1,movedDirection.y=0,prevPressedKeyAngelWas="X")},pauseOrContinueGame=()=>{isMobileSessionStorage&&$("header").hide(),runningNow?(cancelAnimationFrame(animationFrameRunning),runningNow=!1):(requestAnimationFrame(animationFrame),runningNow=!0),pause.innerHTML="Continue"===pause.innerHTML?"Pause":"Continue"},controllMovement=a=>{"ArrowUp"===a?goUp():"ArrowDown"===a?goDown():"ArrowLeft"===a?goLeft():"ArrowRight"===a?goRight():" "===a?pauseOrContinueGame():void 0};document.addEventListener("keydown",function(a){const b=a.key;controllMovement(b)}),isMobileSessionStorage&&(document.addEventListener("swiped-left",()=>{controllMovement("ArrowLeft")}),document.addEventListener("swiped-right",()=>{controllMovement("ArrowRight")}),document.addEventListener("swiped-up",()=>{controllMovement("ArrowUp")}),document.addEventListener("swiped-down",()=>{controllMovement("ArrowDown")})),$("#setting").click(function(){isMobileSessionStorage&&$("header").toggle(300),$(this).blur(),document.body.click()}),$("#closeSideBar").click(()=>{isMobileSessionStorage&&$("header").hide()}),isMobileSessionStorage||($("header").removeClass("none"),$(".closeBox").hide()),$("#bigField, #squareSnake").on("change",function(){if($(this).blur(),"bigField"===this.id)resetBoard(),this.checked?(maxX=39,maxY=39,$("#board").attr("style","grid-template-rows:repeat(40, 1fr)!important;grid-template-columns:repeat(40,1fr)!important")):(maxX=29,maxY=29,$("#board").attr("style","grid-template-rows:repeat(30, 1fr)!important;grid-template-columns:repeat(30,1fr)!important"));else if(this.checked);else $(".snake-head, .snake-body, .snake-foot").css({"border-radius":"50px"})}),resetBoard(),displayScoreBoard(),snakePartClasses.css({"border-radius":squareSnake?"2px":"50px"});